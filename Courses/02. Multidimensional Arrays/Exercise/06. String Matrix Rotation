package com.company;

import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String rotate = scanner.nextLine();

        Pattern pattern = Pattern.compile("[\\d]+");
        Matcher matcher = pattern.matcher(rotate);

        int degrees = 0;
        if (matcher.find()) {
            degrees = Integer.parseInt(matcher.group()) % 360;
        }

        String input = scanner.nextLine();
        List<String> words = new LinkedList<String>();


        while (!"END".equalsIgnoreCase(input)) {
            words.add(input);
            input = scanner.nextLine();
        }

        int longest = Integer.MIN_VALUE;

        for (String word : words) {
            int currentLongest = word.length();

            if (currentLongest > longest) {
                longest = currentLongest;
            }
        }

        if (degrees == 0) {
            printNoDegreeMatrix(words);
        } else if (degrees == 270) {
            print270DegreeMatrix(words, longest);
        } else if (degrees == 180) {
            print180DegreeMatrix(words, longest);
        } else if (degrees == 90) {
            print90DegreeMatrix(words, longest);
        }


    }

    private static void print270DegreeMatrix(List<String> words, int longest) {

        for (int i = longest - 1; i >= 0; i--) {
            for (int j = 0; j < words.size(); j++) {
                String word = words.get(j);
                if (i < word.length()) {
                    char current = word.charAt(i);
                    System.out.print(current);
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }

    private static void print180DegreeMatrix(List<String> words, int longest) {
        for (int i = words.size() - 1; i >= 0; i--) {
            String word = words.get(i);
            for (int j = longest - 1; j >= 0; j--) {
                if (j < word.length()) {
                    char current = word.charAt(j);
                    System.out.print(current);
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }

    private static void print90DegreeMatrix(List<String> words, int longest) {

        for (int i = 0; i < longest; i++) {
            for (int j = words.size() - 1; j >= 0; j--) {
                String word = words.get(j);
                if (i < word.length()) {
                    char current = word.charAt(i);
                    System.out.print(current);
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }

    }

    private static void printNoDegreeMatrix(List<String> words) {
        for (int row = 0; row < words.size(); row++) {
            String word = words.get(row);

            for (int col = 0; col < word.length(); col++) {
                char currentChar = word.charAt(col);
                System.out.print(currentChar);
            }
            System.out.println();
        }
    }

}
